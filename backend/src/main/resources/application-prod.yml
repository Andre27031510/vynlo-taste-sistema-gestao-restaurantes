spring:
  application:
    name: vynlo-taste-backend
  
  profiles:
    active: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/vynlotaste}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate # Nunca auto em produção
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        connection:
          provider_disables_autocommit: true
  
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}
    timeout: 5000ms
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
        max-wait: 10000ms
  
  session:
    store-type: redis
    redis:
      namespace: vynlo:sessions:prod
      flush-mode: on_save
  
  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutos
      cache-null-values: false
  
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
      fail-on-null-for-primitives: false

# Configurações de métricas e monitoramento
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
        exclude: shutdown,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: never # Nunca mostrar detalhes em produção
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: prod
  health:
    redis:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
      threshold: 10GB
    defaults:
      enabled: true

# Configurações de logging para produção
logging:
  level:
    com.vynlotaste: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.data.redis: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/vynlo-taste-prod.log
    max-size: 100MB
    max-history: 30
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30

# Configurações de auditoria
audit:
  enabled: true
  log-level: INFO
  retention-days: 90
  sensitive-fields: password,creditCard,ssn,token

# Configurações de cache
cache:
  user:
    ttl: 300 # 5 minutos
    max-size: 1000
  order:
    ttl: 60 # 1 minuto
    max-size: 500
  product:
    ttl: 600 # 10 minutos
    max-size: 2000

# Configurações de rate limiting
rate-limit:
  enabled: true
  default-limit: 100 # requests por minuto
  auth-endpoints: 10 # login/register por minuto
  api-endpoints: 1000 # API geral por minuto
  burst-capacity: 200

# Configurações de segurança
security:
  jwt:
    secret: ${JWT_SECRET:}
    expiration: 86400000 # 24 horas
  firebase:
    project-id: ${FIREBASE_PROJECT_ID:}
    private-key-id: ${FIREBASE_PRIVATE_KEY_ID:}
    private-key: ${FIREBASE_PRIVATE_KEY:}
    client-email: ${FIREBASE_CLIENT_EMAIL:}
    client-id: ${FIREBASE_CLIENT_ID:}
    auth-uri: https://accounts.google.com/o/oauth2/auth
    token-uri: https://oauth2.googleapis.com/token
    auth-provider-x509-cert-url: https://www.googleapis.com/oauth2/v1/certs
    client-x509-cert-url: ${FIREBASE_CLIENT_X509_CERT_URL:}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://vynlotaste.com,https://app.vynlotaste.com}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

# Configurações de performance
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  tomcat:
    threads:
      max: 200
      min-spare: 20
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20000
    max-http-form-post-size: 10MB
    max-swallow-size: 10MB
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
    whitelabel:
      enabled: false

# Configurações de banco de dados específicas para produção
database:
  connection-pool:
    initial-size: 10
    max-size: 50
    min-idle: 10
    max-idle: 20
    time-between-eviction-runs: 60000
    min-evictable-idle-time: 300000
    validation-query: SELECT 1
    test-while-idle: true
    test-on-borrow: false
    test-on-return: false

# Configurações de Redis para produção
redis:
  cluster:
    enabled: false
  sentinel:
    enabled: false
  timeout:
    connect: 5000
    read: 10000
    write: 10000
  retry:
    max-attempts: 3
    initial-interval: 1000
    multiplier: 2.0
    max-interval: 10000

# Configurações de monitoramento de saúde
health:
  db:
    enabled: true
    validation-query: SELECT 1
  redis:
    enabled: true
  disk:
    enabled: true
    threshold: 10GB
  memory:
    enabled: true
    threshold: 512MB

# Configurações de métricas customizadas
metrics:
  custom:
    enabled: true
    cache-stats: true
    database-stats: true
    api-response-times: true
    error-rates: true

# Configurações de alertas
alerts:
  enabled: true
  health-check:
    interval: 30000 # 30 segundos
    timeout: 10000 # 10 segundos
  disk-usage:
    warning-threshold: 80
    critical-threshold: 90
  memory-usage:
    warning-threshold: 80
    critical-threshold: 90
  response-time:
    warning-threshold: 2000 # 2 segundos
    critical-threshold: 5000 # 5 segundos
