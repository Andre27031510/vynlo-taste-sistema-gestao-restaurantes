AWSTemplateFormatVersion: '2010-09-09'
Description: 'Vynlo Taste - Alertas e Monitoramento'

Parameters:
  Environment:
    Type: String
    Default: prod
  
  NotificationEmail:
    Type: String
    Description: Email para receber alertas
    Default: admin@vynlotaste.com

Resources:
  # SNS Topic para Alertas
  AlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub 'vynlo-taste-alerts-${Environment}'
      DisplayName: 'Vynlo Taste Production Alerts'

  AlertsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref AlertsTopic
      Endpoint: !Ref NotificationEmail

  # Alarme: CPU Alta no Load Balancer
  HighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'vynlo-taste-high-cpu-${Environment}'
      AlarmDescription: 'CPU usage is too high'
      MetricName: CPUUtilization
      Namespace: AWS/ApplicationELB
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: LoadBalancer
          Value: !Sub 'app/vynlo-taste-alb-${Environment}'

  # Alarme: Response Time Alto
  HighResponseTimeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'vynlo-taste-high-response-time-${Environment}'
      AlarmDescription: 'Response time is too high'
      MetricName: TargetResponseTime
      Namespace: AWS/ApplicationELB
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 0.5
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: LoadBalancer
          Value: !Sub 'app/vynlo-taste-alb-${Environment}'

  # Alarme: Taxa de Erro Alta
  HighErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'vynlo-taste-high-error-rate-${Environment}'
      AlarmDescription: 'Error rate is too high'
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: LoadBalancer
          Value: !Sub 'app/vynlo-taste-alb-${Environment}'

  # Alarme: Banco de Dados CPU Alta
  DatabaseHighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'vynlo-taste-db-high-cpu-${Environment}'
      AlarmDescription: 'Database CPU usage is too high'
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Sub 'vynlo-taste-db-${Environment}'

  # Alarme: Muitas Conex√µes no Banco
  DatabaseHighConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'vynlo-taste-db-high-connections-${Environment}'
      AlarmDescription: 'Database has too many connections'
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertsTopic
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Sub 'vynlo-taste-db-${Environment}'

  # Alarme: Redis CPU Alta
  RedisHighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'vynlo-taste-redis-high-cpu-${Environment}'
      AlarmDescription: 'Redis CPU usage is too high'
      MetricName: CPUUtilization
      Namespace: AWS/ElastiCache
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlertsTopic

  # Dashboard CloudWatch
  MonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub 'vynlo-taste-dashboard-${Environment}'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/ApplicationELB", "RequestCount", "LoadBalancer", "app/vynlo-taste-alb-${Environment}" ],
                  [ ".", "TargetResponseTime", ".", "." ],
                  [ ".", "HTTPCode_Target_2XX_Count", ".", "." ],
                  [ ".", "HTTPCode_Target_5XX_Count", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Application Load Balancer",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "CPUUtilization", "DBInstanceIdentifier", "vynlo-taste-db-${Environment}" ],
                  [ ".", "DatabaseConnections", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "RDS Database",
                "period": 300
              }
            }
          ]
        }

Outputs:
  AlertsTopicArn:
    Description: SNS Topic ARN for alerts
    Value: !Ref AlertsTopic
    Export:
      Name: !Sub '${AWS::StackName}-Alerts-Topic'

  DashboardURL:
    Description: CloudWatch Dashboard URL
    Value: !Sub 'https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${MonitoringDashboard}'
    Export:
      Name: !Sub '${AWS::StackName}-Dashboard-URL'